-- task1
CREATE TABLE users_hw5 (
	id serial PRIMARY KEY,
	name varchar(255) COMMENT 'name',
	birthday_at DATE COMMENT 'birthday',
	created_at DATETIME,
	updated_at DATETIME
) COMMENT = 'shoppers';

INSERT INTO 
users_hw5 (name, birthday_at, created_at, updated_at)
VALUES
	('Alex', '2000-01-26', NULL, NULL),
	('Dima', '1983-03-25', NULL, NULL),
	('Andrew', '1981-03-23', NULL, NULL),
	('Maria', '2007-01-28', NULL, NULL);

SELECT * FROM users_hw5;

UPDATE users_hw5 SET created_at = NOW(), updated_at = NOW();
SELECT * FROM users_hw5 uh;

-- final result
-- screen https://cloud.mail.ru/public/Y3r8/64rZ5LskU
1	Alex	2000-01-26	2021-07-25 14:31:36	2021-07-25 14:31:36
2	Dima	1983-03-25	2021-07-25 14:31:36	2021-07-25 14:31:36
3	Andrew	1981-03-23	2021-07-25 14:31:36	2021-07-25 14:31:36
4	Maria	2007-01-28	2021-07-25 14:31:36	2021-07-25 14:31:36
5	Alex	2000-01-26	2021-07-25 14:31:36	2021-07-25 14:31:36
6	Dima	1983-03-25	2021-07-25 14:31:36	2021-07-25 14:31:36
7	Andrew	1981-03-23	2021-07-25 14:31:36	2021-07-25 14:31:36
8	Maria	2007-01-28	2021-07-25 14:31:36	2021-07-25 14:31:36


-- task2
/*
 Таблица users была неудачно спроектирована. 
 Записи created_at и updated_at были заданы типом VARCHAR 
 и в них долгое время помещались значения в формате 20.10.2017 8:10. 
 Необходимо преобразовать поля к типу DATETIME, сохранив введённые ранее значения.
 */

DROP TABLE IF EXISTS users_hw5;
CREATE TABLE users_hw5(
	id serial PRIMARY KEY,
	name VARCHAR(255) COMMENT 'customers name',
	birthday_at DATE COMMENT 'birthday',
	created_at VARCHAR(255),
	updated_at VARCHAR(255)
) COMMENT = 'shoppers';

INSERT INTO	
users_hw5 (name, birthday_at, created_at, updated_at)
VALUES
	('Sasha', '1981-01-26', '26.07.2021 22:07', '26.07.2021 22:07'),
	('Maria', '1982-07-08', '24.07.2021 21:05', '24.07.2021 21:05'),
	('Alex', '1990-03-23', '22.07.2021 21:02', '22.07.2021 21:02'),
	('Bob', '1972-12-20', '21.07.2021 12:02', '21.07.2021 12:02'),
	('Steve', '2001-10-10', '10.07.2021 10:10', '10.07.2021 10:10');

SELECT STR_TO_DATE(created_at, '%d.%m.%Y %k:%i') FROM users_hw5;

UPDATE users_hw5 SET 
	created_at = STR_TO_DATE(created_at, '%d.%m.%Y %k:%i'),
	updated_at = STR_TO_DATE(updated_at, '%d.%m.%Y %k:%i');

SELECT * FROM users_hw5;

DESCRIBE users_hw5;

ALTER TABLE users_hw5 CHANGE updated_at updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

DESCRIBE users_hw5;

ALTER TABLE users_hw5 CHANGE created_at created_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

DESCRIBE users_hw5;
id	bigint(20) unsigned	NO	PRI		auto_increment
name	varchar(255)	YES			
birthday_at	date	YES			
created_at	datetime	YES		CURRENT_TIMESTAMP	on update CURRENT_TIMESTAMP
updated_at	datetime	YES		CURRENT_TIMESTAMP	on update CURRENT_TIMESTAMP

-- screen https://cloud.mail.ru/public/QNvL/uQ5PTAuDF


-- task3
/*
В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 
0, если товар закончился и выше нуля, если на складе имеются запасы. 
Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value. 
Однако нулевые запасы должны выводиться в конце, после всех записей. 
*/

CREATE TABLE warehouse(
	id serial PRIMARY KEY,
	warehouse_id INT UNSIGNED,
	product_id INT UNSIGNED,
	value INT UNSIGNED COMMENT 'warehouse stock',
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
	) COMMENT = 'warehouse stock';

INSERT INTO warehouse (warehouse_id, product_id, value)
VALUES
	(100, 2335, 1000),
	(100, 3545, 0),
	(100, 777, 1500),
	(100, 800, 50),
	(100, 1020, 0);

SELECT * FROM warehouse ORDER BY value;

SELECT id, value, IF(value > 0, 0, 1) AS sort FROM warehouse ORDER BY value;

SELECT * FROM warehouse ORDER BY IF(value > 0, 0, 1), value;

-- screen https://cloud.mail.ru/public/sAW2/Zj6Q8ecPm


